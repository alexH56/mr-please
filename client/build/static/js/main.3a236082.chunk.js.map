{"version":3,"sources":["components/Home.js","components/Setlists/SongsContainer.js","components/Setlists/SongList.js","components/Setlists/ShowHeading.js","components/Setlists/Set.js","components/Setlists/Show.js","components/Setlists/ShowsContainer.js","components/Setlists/SongPage.js","components/Setlists/VenuesContainer.js","components/Setlists/VenueList.js","components/Setlists/VenuePage.js","services/retrieval.js","components/Setlists/Setlists.js","App.js","reportWebVitals.js","index.js"],"names":["Home","to","Container","styled","main","SongsContainer","songs","sortedSongs","sort","a","b","title","map","song","URLname","id","SongList","Heading","h3","ShowHeading","date","venue","name","location","city","state","Set","value","index","note","length","transition","Card","div","Show","show","month","day","year","setOne","sets","setTwo","setThree","encore","showNotes","songNotes","noteArray","set","noteContent","filter","concat","text","ShowsContainer","shows","SongPage","songName","useParams","showsWithSong","match","some","VenuesContainer","venues","sortedVenues","VenueList","VenuePage","venueName","showsWithVenue","baseURL","retrieval","getShows","axios","method","url","then","response","data","catch","err","console","log","getSongs","getVenues","header","Navbar","nav","Setlists","useState","setSongs","setShows","setVenues","useEffect","Promise","all","returnedShows","returnedSongs","returnedVenues","sortedShows","A","B","fetchBandData","path","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kKAgBeA,EAZF,WACX,OACE,qCACE,8BACE,cAAC,IAAD,CAAMC,GAAG,YAAT,wBAGF,oE,sRCPN,IAAMC,EAAYC,IAAOC,KAAV,KAmCAC,EAzBQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EAAc,YAAID,GAAOE,MAAK,SAACC,EAAGC,GAAJ,OAClCD,EAAEE,MAAQD,EAAEC,MACR,EACAF,EAAEE,MAAQD,EAAEC,OACT,EACD,KAGR,OACE,cAACT,EAAD,UACGK,EACG,6BACCA,EAAYK,KAAI,SAAAC,GAAI,OACnB,6BACE,cAAC,IAAD,CAAMZ,GAAE,0BAAqBY,EAAKC,SAAlC,SACGD,EAAKF,SAFDE,EAAKE,SAMhB,QCfKC,EAfE,SAAC,GAAwB,IAAtBV,EAAqB,EAArBA,MAAOW,EAAc,EAAdA,QACzB,OACE,qCACE,cAACA,EAAD,UACE,gEAEDX,EACG,cAAC,EAAD,CACAA,MAAOA,IAEP,S,0MCVV,IAAMW,EAAUd,IAAOe,GAAV,KAiCEC,EArBK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACnBC,EAAkDD,EAAlDC,KAD+B,EACmBD,EAA5CP,eADyB,MACf,GADe,IACmBO,EAA9BE,SAAYC,EADD,EACCA,KAAMC,EADP,EACOA,MAE9C,OACE,eAAC,EAAD,qBACML,EADN,OAEE,cAAC,IAAD,CAAMnB,GAAE,2BAAsBa,GAA9B,SACGQ,IAEF,KACD,cAAC,IAAD,CAAMrB,GAAE,2BAAsBa,GAA9B,SACGU,IAEF,KACD,cAAC,IAAD,CAAMvB,GAAE,2BAAsBa,GAA9B,SACGW,QCZMC,EAhBH,SAAC,GAAsB,IAApBpB,EAAmB,EAAnBA,MAAOqB,EAAY,EAAZA,MAEpB,OACE,8BAAc,WAAVA,EAAqB,UAArB,cAAwCA,EAAxC,KAAJ,IAAuDrB,EAAMM,KAAI,SAACC,EAAMe,GAAP,OAC/D,iCACE,cAAC,IAAD,CAAM3B,GAAE,0BAAqBY,EAAKC,SAAlC,SACGD,EAAKF,OAD0CE,EAAKF,OAGtDE,EAAKgB,KAAO,oCAAOhB,EAAKgB,KAAKd,GAAjB,OAA8B,KAC1Ca,IAAUtB,EAAMwB,OAAS,EAAI,KAAQjB,EAAKkB,WAAa,MAAQ,OALvDlB,EAAKF,c,kkBCDtB,IAAMqB,EAAO7B,IAAO8B,IAAV,KA2JKC,EA5HF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACIA,EAAKf,KAA1BgB,EADiB,EACjBA,MAAOC,EADU,EACVA,IAAKC,EADK,EACLA,KACdlB,EAAI,UAAMgB,EAAN,YAAeC,EAAf,YAAsBC,GAE1BjB,EAAQc,EAAKd,MAEbkB,EAASJ,EAAKK,KAAK,GACnBC,EAASN,EAAKK,KAAK,GACnBE,EAAWP,EAAKK,KAAK,GACrBG,EAASR,EAAKK,KAAKG,OAEnBC,EAAYT,EAAKS,UAEjBC,EAAa,WACjB,IAAIC,EAAY,GAChB,IAAK,IAAMC,KAAOZ,EAAKK,KAAM,CAC3B,IAAMQ,EAAcb,EAAKK,KAAKO,GAC3BE,QAAO,SAAAd,GAAI,OAAIA,EAAKN,QACpBjB,KAAI,SAAAuB,GAAI,OAAIA,EAAKN,QACpBiB,EAAYA,EAAUI,OAAOF,GAE/B,OAAOF,EARU,GAWnB,OACE,eAACd,EAAD,WACE,cAAC,EAAD,CACEZ,KAAMA,EACNC,MAAOA,IAcRkB,EAAOT,OAAS,EACb,cAAC,EAAD,CACAxB,MAAOiC,EACPZ,MAAO,IAGP,KAaHc,EAAOX,OAAS,EACb,cAAC,EAAD,CACAxB,MAAOmC,EACPd,MAAO,IAGP,KAaHe,EAASZ,OAAS,EACf,cAAC,EAAD,CACAxB,MAAOoC,EACPf,MAAO,IAGP,KAaHgB,EAAOb,OAAS,EACb,cAAC,EAAD,CACAxB,MAAO6B,EAAKK,KAAKG,OACjBhB,MAAOgB,IAGP,KAEHE,EAAUf,OAAS,EAChB,6BACCe,EAAUjC,KAAI,SAAAiB,GAAI,OACjB,wCACOA,EAAKd,GADZ,eACqBc,EAAKsB,OADjBtB,EAAKd,SAKhB,KAEH6B,EACG,wCAAWA,KACX,S,8JCvJV,IAAM1C,EAAYC,IAAOC,KAAV,KAuBAgD,EAjBQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxB,OACE,cAAC,EAAD,UACGA,EACG,mCACCA,EAAMzC,KAAI,SAAAuB,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKpB,SAKd,QCqBKuC,EAtCE,SAAC,GAA+B,IAA7BhD,EAA4B,EAA5BA,MAAO+C,EAAqB,EAArBA,MAAOpC,EAAc,EAAdA,QACxBsC,EAAaC,cAAbD,SACF1C,EAAOP,EACTA,EAAM2C,QAAO,SAAApC,GAAI,OAAIA,EAAKC,UAAYyC,KAAU,GAChD,KAEEE,EAAgBJ,GAASxC,EAC3BwC,EAAMJ,QAAO,SAAAd,GACb,IAAIuB,GAAQ,EACZ,IAAK,IAAMX,KAAOZ,EAAKK,KACrB,GAAIL,EAAKK,KAAKO,GAAKY,MAAK,SAAA9C,GAAI,OAAIA,EAAKC,UAAYyC,KAAW,CAC1DG,GAAQ,EACR,MAGJ,OAAOA,KAEP,KAEJ,OACE,mCACG7C,EACG,qCACA,eAACI,EAAD,WACE,6BAAKJ,EAAKF,QACV,2EAGF,cAAC,EAAD,CACE0C,MAAOI,OAIT,Q,2NCnCV,IAAMvD,EAAYC,IAAOC,KAAV,KAqCAwD,EA3BS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,EAAe,YAAID,GAAQrD,MAAK,SAACC,EAAGC,GAAJ,OACpCD,EAAEa,KAAOZ,EAAEY,KACP,EACAb,EAAEa,KAAOZ,EAAEY,MACR,EACD,KAGR,OACE,cAAC,EAAD,UACGwC,EACG,mCACA,6BACGA,EAAalD,KAAI,SAAAS,GAAK,OACrB,6BACE,cAAC,IAAD,CAAMpB,GAAE,2BAAsBoB,EAAMP,SAApC,SACGO,EAAMC,QAFFD,EAAMN,WAOnB,QClBKgD,EAdG,SAAC,GAAyB,IAAvBF,EAAsB,EAAtBA,OAAQ5C,EAAc,EAAdA,QAC3B,OACE,qCACE,cAACA,EAAD,UACE,iEAGF,cAAC,EAAD,CACE4C,OAAQA,QCwBDG,EA9BG,SAAC,GAAgC,IAA9BH,EAA6B,EAA7BA,OAAQR,EAAqB,EAArBA,MAAOpC,EAAc,EAAdA,QAC1BgD,EAAcT,cAAdS,UACF5C,EAAQwC,EACVA,EAAOZ,QAAO,SAAA5B,GAAK,OAAIA,EAAMP,UAAYmD,KAAW,GACpD,KAEEC,EAAiBb,GAAShC,EAC5BgC,EAAMJ,QAAO,SAAAd,GAAI,OAAIA,EAAKd,MAAMC,OAASD,EAAMC,QAC/C,KAEJ,OACE,mCACGD,EACG,qCACA,eAACJ,EAAD,WACE,6BAAKI,EAAMC,OACX,mEAGF,cAAC,EAAD,CACE+B,MAAOa,OAIT,Q,iBC7BJC,EAAU,OAiCDC,EADG,CAAEC,SA9BH,kBACfC,IAAM,CACJC,OAAQ,MACRC,IAAK,SACLL,QAASA,IAERM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAuBAG,SApBb,kBACfV,IAAM,CACJC,OAAQ,MACRC,IAAK,SACLL,QAASA,IAERM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAaUI,UAVtB,kBAChBX,IAAM,CACJC,OAAQ,MACRC,IAAK,UACLL,QAASA,IAERM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,2fCb9B,IAAM5D,EAAUd,IAAO+E,OAAV,KAkBPC,EAAShF,IAAOiF,IAAV,KA+GGC,EAxGE,WAAO,IAAD,EACKC,mBAAS,IADd,mBACdhF,EADc,KACPiF,EADO,OAEKD,mBAAS,IAFd,mBAEdjC,EAFc,KAEPmC,EAFO,OAGOF,mBAAS,IAHhB,mBAGdzB,EAHc,KAGN4B,EAHM,KA+CrB,OA1CAC,qBAAU,YAEW,uCAAG,sCAAAjF,EAAA,sEACyCkF,QAAQC,IAAI,CACvExB,EAAUC,WACVD,EAAUY,WACVZ,EAAUa,cAJQ,mCACbY,EADa,KACEC,EADF,KACiBC,EADjB,KAOdC,EAAc,YAAIH,GAAerF,MAAK,SAACC,EAAGC,GAC9C,IAAMuF,EAAIxF,EAAEW,KACN8E,EAAIxF,EAAEU,KAEZ,OAAI6E,EAAE3D,OAAS4D,EAAE5D,KACR4D,EAAE5D,KAAO2D,EAAE3D,KACT2D,EAAE7D,QAAU8D,EAAE9D,MAChB8D,EAAE9D,MAAQ6D,EAAE7D,MAEZ8D,EAAE7D,IAAM4D,EAAE5D,OAIrBmD,EAASQ,GACTT,EAASO,GACTL,EAAUM,GAtBU,4CAAH,qDAyBnBI,KAEF,IAcE,qCACE,eAAChB,EAAD,WACE,cAAC,IAAD,CAAMlF,GAAG,YAAT,sBACA,uBACA,cAAC,IAAD,CAAMA,GAAG,kBAAT,mBACA,uBACA,cAAC,IAAD,CAAMA,GAAG,mBAAT,uBAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmG,KAAK,4BAAZ,SACE,cAAC,EAAD,CACE9F,MAAOA,EACP+C,MAAOA,EACPpC,QAASA,MAIb,cAAC,IAAD,CAAOmF,KAAK,kBAAZ,SACE,cAAC,EAAD,CACE9F,MAAOA,EACP+C,MAAOA,EACPpC,QAASA,MAIb,cAAC,IAAD,CAAOmF,KAAK,8BAAZ,SACE,cAAC,EAAD,CACEvC,OAAQA,EACRR,MAAOA,EACPpC,QAASA,MAIb,cAAC,IAAD,CAAOmF,KAAK,mBAAZ,SACE,cAAC,EAAD,CACEvC,OAAQA,EACRR,MAAOA,EACPpC,QAASA,MAIb,eAAC,IAAD,CAAOmF,KAAK,YAAZ,UACE,eAAC,EAAD,WACE,4CACA,sEAEF,cAAC,EAAD,CACE/C,MAAOA,cCjHJgD,EAlBH,WACV,OACE,qBAAKC,UAAU,MAAf,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOF,KAAK,YAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,YCLKG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3a236082.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <nav>\r\n        <Link to='/setlists'>Setlists</Link>\r\n      </nav>\r\n\r\n      <h1>Hey what's up we're Mr. Please</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.main`\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        ul {\r\n          list-style-type: none;\r\n        }\r\n    `;\r\n\r\nconst SongsContainer = ({ songs }) => {\r\n  const sortedSongs = [...songs].sort((a, b) => (\r\n    a.title > b.title\r\n      ? 1\r\n      : a.title < b.title\r\n        ? -1\r\n        : 0\r\n  ));\r\n\r\n  return (\r\n    <Container>\r\n      {sortedSongs\r\n        ? <ul>\r\n          {sortedSongs.map(song => (\r\n            <li key={song.id}>\r\n              <Link to={`/setlists/songs/${song.URLname}`}>\r\n                {song.title}\r\n              </Link>\r\n            </li>))}\r\n        </ul>\r\n        : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SongsContainer;\r\n","import React from 'react';\r\n\r\nimport SongsContainer from './SongsContainer';\r\n\r\nconst SongList = ({ songs, Heading }) => {\r\n  return (\r\n    <>\r\n      <Heading>\r\n        <h1>Songs played by Mr. Please: </h1>\r\n      </Heading>\r\n      {songs\r\n        ? <SongsContainer\r\n          songs={songs}\r\n          />\r\n        : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SongList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Heading = styled.h3`\r\n    margin-top: 0;\r\n\r\n    a {\r\n      color: currentColor;\r\n\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n`;\r\n\r\nconst ShowHeading = ({ date, venue }) => {\r\n  const { name, URLname = '', location: { city, state } } = venue;\r\n\r\n  return (\r\n    <Heading>\r\n      {`${date} - `}\r\n      <Link to={`/setlists/venues/${URLname}`}>\r\n        {name}\r\n      </Link>\r\n      {', '}\r\n      <Link to={`/setlists/venues/${URLname}`}>\r\n        {city}\r\n      </Link>\r\n      {', '}\r\n      <Link to={`/setlists/venues/${URLname}`}>\r\n        {state}\r\n      </Link>\r\n    </Heading>\r\n  );\r\n};\r\n\r\nexport default ShowHeading;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Set = ({ songs, value }) => {\r\n  // 'value' prop denotes set order (i.e. set 1, 2, 3, or encore)\r\n  return (\r\n    <p>{value === 'encore' ? 'Encore:' : `Set ${value}:`} {songs.map((song, index) => (\r\n      <span key={song.title}>\r\n        <Link to={`/setlists/songs/${song.URLname}`} key={song.title}>\r\n          {song.title}\r\n        </Link>\r\n        {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n        {index === songs.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n      </span>\r\n    ))}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Set;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport ShowHeading from './ShowHeading';\r\nimport Set from './Set';\r\n\r\nconst Card = styled.div`\r\n    background: papayawhip;\r\n    box-shadow: 0 7px 30px -10px rgba(150,170,180,0.5);\r\n    border-radius: 20px;\r\n    padding: 20px;\r\n    margin-bottom: 40px;\r\n\r\n    p {\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    a {\r\n      color: palevioletred;\r\n      text-decoration: none;\r\n\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n\r\n    ul {\r\n      margin-bottom: 0;\r\n      padding: 0;\r\n      list-style-type: none;      \r\n    }\r\n\r\n    @media (min-width: 400px) {\r\n      width: 525px;\r\n    }\r\n  `;\r\n\r\nconst Show = ({ show }) => {\r\n  const { month, day, year } = show.date;\r\n  const date = `${month}/${day}/${year}`;\r\n\r\n  const venue = show.venue;\r\n\r\n  const setOne = show.sets[1];\r\n  const setTwo = show.sets[2];\r\n  const setThree = show.sets[3];\r\n  const encore = show.sets.encore;\r\n\r\n  const showNotes = show.showNotes;\r\n\r\n  const songNotes = (() => {\r\n    let noteArray = [];\r\n    for (const set in show.sets) {\r\n      const noteContent = show.sets[set]\r\n        .filter(show => show.note)\r\n        .map(show => show.note);\r\n      noteArray = noteArray.concat(noteContent);\r\n    }\r\n    return noteArray;\r\n  })();\r\n\r\n  return (\r\n    <Card>\r\n      <ShowHeading\r\n        date={date}\r\n        venue={venue}\r\n      />\r\n\r\n      {/* <p>Set One: {setOne.map((song, index) => (\r\n          <span key={song.title}>\r\n            <Link to={`/setlists/songs/${song.URLname}`} key={song.title}>\r\n              {song.title}\r\n            </Link>\r\n            {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n            {index === setOne.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n          </span>\r\n        ))}\r\n        </p> */}\r\n\r\n      {setOne.length > 0\r\n        ? <Set\r\n          songs={setOne}\r\n          value={1}\r\n          />\r\n\r\n        : null}\r\n\r\n      {/* <p>Set Two: {setTwo.map((song, index) => (\r\n          <span key={song.title}>\r\n            <Link to={`/setlists/songs/${song.URLname}`} key={song.title}>\r\n              {song.title}\r\n            </Link>\r\n            {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n            {index === setTwo.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n          </span>\r\n        ))}\r\n        </p> */}\r\n\r\n      {setTwo.length > 0\r\n        ? <Set\r\n          songs={setTwo}\r\n          value={2}\r\n          />\r\n\r\n        : null}\r\n\r\n      {/* <p>Set Three: {setOne.map((song, index) => (\r\n          <span key={song.title}>\r\n            <Link to={`/setlists/songs/${song.URLname}`} key={song.title}>\r\n              {song.title}\r\n            </Link>\r\n            {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n            {index === setOne.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n          </span>\r\n        ))}\r\n        </p> */}\r\n\r\n      {setThree.length > 0\r\n        ? <Set\r\n          songs={setThree}\r\n          value={3}\r\n          />\r\n\r\n        : null}\r\n\r\n      {/* <p>Encore: {encore.map((song, index) => (\r\n          <span key={song.title}>\r\n            <Link to={`/setlists/songs/${song.URLname}`} key={song.title}>\r\n              {song.title}\r\n            </Link>\r\n            {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n            {index === encore.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n          </span>\r\n        ))}\r\n        </p> */}\r\n\r\n      {encore.length > 0\r\n        ? <Set\r\n          songs={show.sets.encore}\r\n          value={encore}\r\n          />\r\n\r\n        : null}\r\n\r\n      {songNotes.length > 0\r\n        ? <ul>\r\n          {songNotes.map(note => (\r\n            <li key={note.id}>\r\n              {`[${note.id}] - ${note.text}`}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        : null}\r\n\r\n      {showNotes\r\n        ? <p>Notes: {showNotes}</p>\r\n        : null}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Show from './Show';\r\n\r\nconst Container = styled.main`\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n`;\r\n\r\nconst ShowsContainer = ({ shows }) => {\r\n  return (\r\n    <Container>\r\n      {shows\r\n        ? <>\r\n          {shows.map(show => (\r\n            <Show\r\n              key={show.id}\r\n              show={show}\r\n            />\r\n          ))}\r\n          </>\r\n        : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShowsContainer;\r\n","import React from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport ShowsContainer from './ShowsContainer';\r\n\r\nconst SongPage = ({ songs, shows, Heading }) => {\r\n  const { songName } = useParams();\r\n  const song = songs\r\n    ? songs.filter(song => song.URLname === songName)[0]\r\n    : null;\r\n\r\n  const showsWithSong = shows && song\r\n    ? shows.filter(show => {\r\n      let match = false;\r\n      for (const set in show.sets) {\r\n        if (show.sets[set].some(song => song.URLname === songName)) {\r\n          match = true;\r\n          break;\r\n        }\r\n      }\r\n      return match;\r\n    })\r\n    : null;\r\n\r\n  return (\r\n    <>\r\n      {song\r\n        ? <>\r\n          <Heading>\r\n            <h1>{song.title}</h1>\r\n            <p>Has been played at the following shows:</p>\r\n          </Heading>\r\n\r\n          <ShowsContainer\r\n            shows={showsWithSong}\r\n          />\r\n          </>\r\n\r\n        : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SongPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.main`\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        ul {\r\n          list-style-type: none;\r\n        }\r\n`;\r\n\r\nconst VenuesContainer = ({ venues }) => {\r\n  const sortedVenues = [...venues].sort((a, b) => (\r\n    a.name > b.name\r\n      ? 1\r\n      : a.name < b.name\r\n        ? -1\r\n        : 0\r\n  ));\r\n\r\n  return (\r\n    <Container>\r\n      {sortedVenues\r\n        ? <>\r\n          <ul>\r\n            {sortedVenues.map(venue => (\r\n              <li key={venue.id}>\r\n                <Link to={`/setlists/venues/${venue.URLname}`}>\r\n                  {venue.name}\r\n                </Link>\r\n              </li>))}\r\n          </ul>\r\n        </>\r\n        : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VenuesContainer\r\n;\r\n","import React from 'react';\r\n\r\nimport VenuesContainer from './VenuesContainer';\r\n\r\nconst VenueList = ({ venues, Heading }) => {\r\n  return (\r\n    <>\r\n      <Heading>\r\n        <h1>Venues played by Mr. Please: </h1>\r\n      </Heading>\r\n\r\n      <VenuesContainer\r\n        venues={venues}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VenueList;\r\n","import React from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport ShowsContainer from './ShowsContainer';\r\n\r\nconst VenuePage = ({ venues, shows, Heading }) => {\r\n  const { venueName } = useParams();\r\n  const venue = venues\r\n    ? venues.filter(venue => venue.URLname === venueName)[0]\r\n    : null;\r\n\r\n  const showsWithVenue = shows && venue\r\n    ? shows.filter(show => show.venue.name === venue.name)\r\n    : null;\r\n\r\n  return (\r\n    <>\r\n      {venue\r\n        ? <>\r\n          <Heading>\r\n            <h1>{venue.name}</h1>\r\n            <p>Has hosted the following shows:</p>\r\n          </Heading>\r\n\r\n          <ShowsContainer\r\n            shows={showsWithVenue}\r\n          />\r\n          </>\r\n\r\n        : null}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VenuePage;\r\n","import axios from 'axios';\r\nconst baseURL = '/api';\r\n\r\nconst getShows = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/shows',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst getSongs = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/songs',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst getVenues = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/venues',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst retrieval = { getShows, getSongs, getVenues };\r\nexport default retrieval;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n// component imports\r\nimport SongList from './SongList';\r\nimport SongPage from './SongPage';\r\nimport VenueList from './VenueList';\r\nimport VenuePage from './VenuePage';\r\nimport ShowsContainer from './ShowsContainer';\r\n\r\n// import ShowForm from './components/ShowForm/ShowForm';\r\n\r\n// service imports\r\nimport retrieval from '../../services/retrieval';\r\n// import posting from '../../services/posting';\r\n\r\nconst Heading = styled.header`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin: 2rem 0rem;\r\n\r\n    h1 {\r\n      font-family: 'Roboto', sans-serif;\r\n      font-weight: 700px;\r\n      margin: 0 0 1rem 0;\r\n    }\r\n    \r\n    p {\r\n      margin: 0;\r\n      text-align: center;\r\n    }\r\n`;\r\n\r\nconst Navbar = styled.nav`\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    padding-top: .5rem;\r\n`;\r\n\r\nconst Setlists = () => {\r\n  const [songs, setSongs] = useState('');\r\n  const [shows, setShows] = useState('');\r\n  const [venues, setVenues] = useState('');\r\n\r\n  useEffect(() => {\r\n    // retrieves all band-related data upon page load\r\n    const fetchBandData = async () => {\r\n      const [returnedShows, returnedSongs, returnedVenues] = await Promise.all([\r\n        retrieval.getShows(),\r\n        retrieval.getSongs(),\r\n        retrieval.getVenues()\r\n      ]);\r\n\r\n      const sortedShows = [...returnedShows].sort((a, b) => {\r\n        const A = a.date;\r\n        const B = b.date;\r\n\r\n        if (A.year !== B.year) {\r\n          return B.year - A.year;\r\n        } else if (A.month !== B.month) {\r\n          return B.month - A.month;\r\n        } else {\r\n          return B.day - A.day;\r\n        }\r\n      });\r\n\r\n      setShows(sortedShows);\r\n      setSongs(returnedSongs);\r\n      setVenues(returnedVenues);\r\n    };\r\n\r\n    fetchBandData();\r\n  },\r\n  []);\r\n\r\n  // \"handleNewShow\" function only necessary for ShowForm. Currently not user-facing\r\n  //\r\n  // const handleNewShow = (show) => {\r\n  //   posting\r\n  //     .addShow(show)\r\n  //     .then(returnedShow => {\r\n  //       console.log(returnedShow);\r\n  //       setShows(shows.concat(returnedShow));\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Navbar>\r\n        <Link to='/setlists'>Setlists</Link>\r\n        <br />\r\n        <Link to='/setlists/songs'>Songs</Link>\r\n        <br />\r\n        <Link to='/setlists/venues'>Venues</Link>\r\n      </Navbar>\r\n\r\n      <Switch>\r\n        <Route path='/setlists/songs/:songName'>\r\n          <SongPage\r\n            songs={songs}\r\n            shows={shows}\r\n            Heading={Heading}\r\n          />\r\n        </Route>\r\n\r\n        <Route path='/setlists/songs'>\r\n          <SongList\r\n            songs={songs}\r\n            shows={shows}\r\n            Heading={Heading}\r\n          />\r\n        </Route>\r\n\r\n        <Route path='/setlists/venues/:venueName'>\r\n          <VenuePage\r\n            venues={venues}\r\n            shows={shows}\r\n            Heading={Heading}\r\n          />\r\n        </Route>\r\n\r\n        <Route path='/setlists/venues'>\r\n          <VenueList\r\n            venues={venues}\r\n            shows={shows}\r\n            Heading={Heading}\r\n          />\r\n        </Route>\r\n\r\n        <Route path='/setlists'>\r\n          <Heading>\r\n            <h1>Mr. Please</h1>\r\n            <p>has performed the following shows:</p>\r\n          </Heading>\r\n          <ShowsContainer\r\n            shows={shows}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Setlists;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n// component imports\r\nimport Home from './components/Home';\r\nimport Setlists from './components/Setlists/Setlists';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='App'>\r\n\r\n      <Switch>\r\n        <Route path='/setlists'>\r\n          <Setlists />\r\n        </Route>\r\n\r\n        <Route path='/'>\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}