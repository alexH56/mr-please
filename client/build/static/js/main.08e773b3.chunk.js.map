{"version":3,"sources":["components/Show.js","services/retrieval.js","App.js","reportWebVitals.js","index.js"],"names":["Show","songs","sets","setOne","map","song","title","join","setTwo","encore","retrievalService","getShow","axios","get","then","res","data","App","useState","show","setShow","useEffect","returnedShow","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAkBeA,EAhBF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAKd,OAEE,gCACE,0CAAaA,EAAMC,KAAKC,OAAOC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SAAOC,KAAK,SAC5D,0CAAaN,EAAMC,KAAKM,OAAOJ,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SAAOC,KAAK,SAC5D,yCAAYN,EAAMC,KAAKO,OAAOL,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SAAOC,KAAK,a,iBCFlDG,EADU,CAAEC,QANX,kBACdC,IACGC,IAJW,cAKXC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UCuBNC,EAvBH,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACTC,EADS,KACHC,EADG,KAWhB,OARAC,qBAAU,WACRX,EACGC,UACAG,MAAK,SAAAQ,GACJF,EAAQE,QAGd,IAEE,qBAAKC,UAAU,MAAf,SACGJ,EACG,cAAC,EAAD,CACAlB,MAAOkB,IAEP,QCXKK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.08e773b3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Show = ({ songs }) => {\r\n//   useEffect(() => {\r\n//     console.log(songs.sets.setOne);\r\n//   }, [songs]);\r\n\r\n  return (\r\n\r\n    <div>\r\n      <p>Set One: {songs.sets.setOne.map(song => song.title).join(', ')}</p>\r\n      <p>Set Two: {songs.sets.setTwo.map(song => song.title).join(', ')}</p>\r\n      <p>Encore: {songs.sets.encore.map(song => song.title).join(', ')}</p>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","import axios from 'axios';\r\nconst baseURL = '/api/show/';\r\n\r\nconst getShow = () => (\r\n  axios\r\n    .get(baseURL)\r\n    .then(res => res.data)\r\n);\r\n\r\nconst retrievalService = { getShow };\r\nexport default retrievalService\r\n;\r\n","import React, { useEffect, useState } from 'react';\n\nimport Show from './components/Show';\n\nimport retrievalService from './services/retrieval';\n\nconst App = () => {\n  const [show, setShow] = useState('');\n\n  useEffect(() => {\n    retrievalService\n      .getShow()\n      .then(returnedShow => {\n        setShow(returnedShow);\n      });\n  },\n  []);\n  return (\n    <div className='App'>\n      {show\n        ? <Show\n          songs={show}\n          />\n        : null}\n\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}