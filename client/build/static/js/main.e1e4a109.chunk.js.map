{"version":3,"sources":["components/Home.js","components/Setlists/Show.js","components/Setlists/SongList.js","components/Setlists/ShowsContainer.js","components/Setlists/SongPage.js","components/Setlists/VenueList.js","components/Setlists/VenuePage.js","services/retrieval.js","components/Setlists/Setlists.js","App.js","reportWebVitals.js","index.js"],"names":["Home","to","Show","show","Card","styled","div","Heading","h3","date","month","day","year","venueName","venue","name","setOne","sets","setTwo","setThree","encore","showNotes","songNotes","noteArray","set","noteContent","filter","note","map","concat","length","song","index","URLname","title","id","transition","text","SongList","songs","ShowsContainer","shows","Container","main","SongPage","songName","useParams","showsWithSong","match","some","VenueList","venues","VenuePage","showsWithVenue","baseURL","retrieval","getShows","axios","method","url","then","response","data","catch","err","console","log","getSongs","getVenues","Setlists","useState","setSongs","setShows","setVenues","useEffect","a","Promise","all","returnedShows","returnedSongs","returnedVenues","sortedShows","sort","b","A","B","fetchBandData","path","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1e4a109.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <nav>\r\n        <Link to='/setlists'>Setlists</Link>\r\n      </nav>\r\n\r\n      <h1>Hey what's up we're Mr. Please</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Show = ({ show }) => {\r\n  const Card = styled.div`\r\n    background: papayawhip;\r\n    box-shadow: 0 7px 30px -10px rgba(150,170,180,0.5);\r\n    border-radius: 20px;\r\n    padding: 10px;\r\n    width: 90%;\r\n    margin-bottom: 40px;\r\n\r\n    a {\r\n      color: palevioletred;\r\n      text-decoration: none;\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n    \r\n    span {\r\n      color: palevioletred;\r\n    }\r\n  `;\r\n\r\n  const Heading = styled.h3`\r\n    margin-top: 0;\r\n  `;\r\n\r\n  // end styles\r\n\r\n  const { month, day, year } = show.date;\r\n  const date = `${month}/${day}/${year}`;\r\n  const venueName = show.venue.name;\r\n\r\n  const setOne = show.sets[1];\r\n  const setTwo = show.sets[2];\r\n  const setThree = show.sets[3];\r\n  const encore = show.sets.encore;\r\n\r\n  const showNotes = show.showNotes;\r\n\r\n  const songNotes = (() => {\r\n    let noteArray = [];\r\n    for (const set in show.sets) {\r\n      const noteContent = show.sets[set]\r\n        .filter(show => show.note)\r\n        .map(show => show.note);\r\n      noteArray = noteArray.concat(noteContent);\r\n    }\r\n    return noteArray;\r\n  })();\r\n\r\n  return (\r\n    <Card>\r\n      <Heading>{date} - {venueName}</Heading>\r\n\r\n      {/* {setID === 'encore' ? 'Encore: ' : `Set ${setID}: `}\r\n        {set.map((song, index) => (\r\n          <span key={song.title}>\r\n            <a key={song.title}\r\n            // href='#'\r\n            >\r\n              {song.title}\r\n            </a>\r\n            {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n            {index === set.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n          </span>\r\n        ))} */}\r\n\r\n      {setOne.length > 0\r\n        ? <p>Set One: {setOne.map((song, index) => (\r\n          <span key={song.title}>\r\n            <Link to={`/setlists/songs/${song.URLname}`} key={song.title}>\r\n              {song.title}\r\n            </Link>\r\n            {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n            {index === setOne.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n          </span>\r\n        ))}\r\n          </p>\r\n        : null}\r\n\r\n      {setTwo.length > 0\r\n        ? <p>Set Two: {setTwo.map((song, index) => (\r\n          <span key={song.title}>\r\n            <Link to={`/setlists/songs/${song.URLname}`} key={song.title}>\r\n              {song.title}\r\n            </Link>\r\n            {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n            {index === setTwo.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n          </span>\r\n        ))}\r\n          </p>\r\n        : null}\r\n\r\n      {setThree.length > 0\r\n        ? <p>Set Three: {setOne.map((song, index) => (\r\n          <span key={song.title}>\r\n            <Link to={`/setlists/songs/${song.URLname}`} key={song.title}>\r\n              {song.title}\r\n            </Link>\r\n            {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n            {index === setOne.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n          </span>\r\n        ))}\r\n          </p>\r\n        : null}\r\n\r\n      {encore.length > 0\r\n        ? <p>Encore: {encore.map((song, index) => (\r\n          <span key={song.title}>\r\n            <Link to={`/setlists/songs/${song.URLname}`} key={song.title}>\r\n              {song.title}\r\n            </Link>\r\n            {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n            {index === encore.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n          </span>\r\n        ))}\r\n          </p>\r\n        : null}\r\n\r\n      <ul>\r\n        {songNotes.map(note => (\r\n          <li key={note.id}>\r\n            {`[${note.id}] ${note.text}`}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {showNotes\r\n        ? <p>Notes: {showNotes}</p>\r\n        : null}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SongList = ({ songs }) => {\r\n  return (\r\n    <>\r\n      <h1>Songs played by Mr. Please: </h1>\r\n      {songs\r\n        ? <>\r\n          <ul>\r\n            {songs.map(song => (\r\n              <li key={song.id}>\r\n                <Link to={`/setlists/songs/${song.URLname}`}>\r\n                  {song.title}\r\n                </Link>\r\n              </li>))}\r\n          </ul>\r\n        </>\r\n        : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SongList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Show from './Show';\r\n\r\nconst ShowsContainer = ({ shows }) => {\r\n  const Container = styled.main`\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    `;\r\n  return (\r\n    <Container>\r\n      {shows\r\n        ? <>\r\n          {shows.map(show => (\r\n            <Show\r\n              key={show.id}\r\n              show={show}\r\n            />\r\n          ))}\r\n        </>\r\n        : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShowsContainer;\r\n","import React from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport ShowsContainer from './ShowsContainer';\r\n\r\nconst SongPage = ({ songs, shows }) => {\r\n  const { songName } = useParams();\r\n  const song = songs\r\n    ? songs.filter(song => song.URLname === songName)[0]\r\n    : null;\r\n\r\n  const showsWithSong = shows && song\r\n    ? shows.filter(show => {\r\n      let match = false;\r\n      for (const set in show.sets) {\r\n        if (show.sets[set].some(song => song.URLname === songName)) {\r\n          match = true;\r\n          break;\r\n        }\r\n      }\r\n      return match;\r\n    })\r\n    : null;\r\n\r\n  //   console.log(showsWithSong);\r\n\r\n  return (\r\n    <>\r\n      {song\r\n        ? <>\r\n          <h1>{song.title}</h1>\r\n          <p>Has been played at the following shows:</p>\r\n\r\n          <ShowsContainer\r\n            shows={showsWithSong}\r\n          />\r\n          </>\r\n\r\n        : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SongPage;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst VenueList = ({ venues }) => {\r\n  return (\r\n    <>\r\n      <h1>Venues played by Mr. Please: </h1>\r\n      {venues\r\n        ? <>\r\n          <ul>\r\n            {venues.map(venue => (\r\n              <li key={venue.id}>\r\n                <Link to={`/setlists/venues/${venue.URLname}`}>\r\n                  {venue.name}\r\n                </Link>\r\n              </li>))}\r\n          </ul>\r\n        </>\r\n        : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VenueList;\r\n","import React from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport ShowsContainer from './ShowsContainer';\r\n\r\nconst VenuePage = ({ venues, shows }) => {\r\n  const { venueName } = useParams();\r\n  const venue = venues\r\n    ? venues.filter(venue => venue.URLname === venueName)[0]\r\n    : null;\r\n\r\n  const showsWithVenue = shows && venue\r\n    ? shows.filter(show => show.venue.name === venue.name)\r\n    : null;\r\n\r\n  return (\r\n    <>\r\n      {venue\r\n        ? <>\r\n          <h1>{venue.name}</h1>\r\n          <p>Has hosted the following shows:</p>\r\n\r\n          <ShowsContainer\r\n            shows={showsWithVenue}\r\n          />\r\n        </>\r\n\r\n        : null}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VenuePage;\r\n","import axios from 'axios';\r\nconst baseURL = '/api';\r\n\r\nconst getShows = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/shows',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst getSongs = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/songs',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst getVenues = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/venues',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst retrieval = { getShows, getSongs, getVenues };\r\nexport default retrieval;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\n\r\n// component imports\r\nimport Show from './Show';\r\nimport SongList from './SongList';\r\nimport SongPage from './SongPage';\r\nimport VenueList from './VenueList';\r\nimport VenuePage from './VenuePage';\r\nimport ShowsContainer from './ShowsContainer';\r\n\r\n// import ShowForm from './components/ShowForm/ShowForm';\r\n\r\n// service imports\r\nimport retrieval from '../../services/retrieval';\r\n// import posting from '../../services/posting';\r\n\r\nconst Setlists = () => {\r\n  const [songs, setSongs] = useState('');\r\n  const [shows, setShows] = useState('');\r\n  const [venues, setVenues] = useState('');\r\n\r\n  useEffect(() => {\r\n    // retrieves all band-related data upon page load\r\n    const fetchBandData = async () => {\r\n      const [returnedShows, returnedSongs, returnedVenues] = await Promise.all([\r\n        retrieval.getShows(),\r\n        retrieval.getSongs(),\r\n        retrieval.getVenues()\r\n      ]);\r\n\r\n      const sortedShows = [...returnedShows].sort((a, b) => {\r\n        const A = a.date;\r\n        const B = b.date;\r\n\r\n        if (A.year !== B.year) {\r\n          return A.year + B.year;\r\n        } else if (A.month !== B.month) {\r\n          return A.month + B.month;\r\n        } else {\r\n          return A.day + B.day;\r\n        }\r\n      });\r\n\r\n      setShows(sortedShows);\r\n      setSongs(returnedSongs);\r\n      setVenues(returnedVenues);\r\n    };\r\n\r\n    fetchBandData();\r\n  },\r\n  []);\r\n\r\n  // \"handleNewShow\" function only necessary for ShowForm. Currently not user-facing\r\n  //\r\n  // const handleNewShow = (show) => {\r\n  //   posting\r\n  //     .addShow(show)\r\n  //     .then(returnedShow => {\r\n  //       console.log(returnedShow);\r\n  //       setShows(shows.concat(returnedShow));\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <nav>\r\n        <Link to='/setlists'>Setlists</Link>\r\n        <br />\r\n        <Link to='/setlists/songs'>Songs</Link>\r\n        <br />\r\n        <Link to='/setlists/venues'>Venues</Link>\r\n      </nav>\r\n\r\n      <Switch>\r\n        <Route path='/setlists/songs/:songName'>\r\n          <SongPage\r\n            songs={songs}\r\n            shows={shows}\r\n          />\r\n        </Route>\r\n\r\n        <Route path='/setlists/songs'>\r\n          <SongList\r\n            songs={songs}\r\n            shows={shows}\r\n          />\r\n        </Route>\r\n\r\n        <Route path='/setlists/venues/:venueName'>\r\n          <VenuePage\r\n            venues={venues}\r\n            shows={shows}\r\n          />\r\n        </Route>\r\n\r\n        <Route path='/setlists/venues'>\r\n          <VenueList\r\n            venues={venues}\r\n            shows={shows}\r\n          />\r\n        </Route>\r\n\r\n        <Route path='/setlists'>\r\n          <h1>Shows performed by Mr. Please: </h1>\r\n          <ShowsContainer\r\n            shows={shows}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Setlists;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n// component imports\r\nimport Home from './components/Home';\r\nimport Setlists from './components/Setlists/Setlists';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='App'>\r\n\r\n      <Switch>\r\n        <Route path='/setlists'>\r\n          <Setlists />\r\n        </Route>\r\n\r\n        <Route path='/'>\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}