{"version":3,"sources":["services/retrieval.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","retrieval","getShows","axios","method","url","then","response","data","catch","err","console","log","getSongs","App","useState","songs","setSongs","useEffect","className","map","song","title","_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KACMA,EAAU,OAuBDC,EADG,CAAEC,SApBH,kBACfC,IAAM,CACJC,OAAQ,MACRC,IAAK,SACLL,QAASA,IAERM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAaAG,SAVb,kBACfV,IAAM,CACJC,OAAQ,MACRC,IAAK,SACLL,QAASA,IAERM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QCsCfI,EAlDH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEUF,mBAAS,IAFnB,6BAsBhB,OAlBAG,qBAAU,WACRP,QAAQC,IAAI,kBACZX,EACGY,WACAP,MAAK,SAAAU,GACJL,QAAQC,IAAII,GACZC,EAASD,QAUf,IAGE,sBAAKG,UAAU,MAAf,UACE,8DACCH,EACG,mCACA,6BACGA,EAAMI,KAAI,SAAAC,GAAI,OAAK,6BAAoBA,EAAKC,OAAhBD,EAAKE,YAGpC,KAEJ,qEC7BSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9a724da7.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseURL = '/api';\r\n\r\nconst getShows = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/shows',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst getSongs = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/songs',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst retrieval = { getShows, getSongs };\r\nexport default retrieval;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// component imports\r\nimport Show from './components/Show';\r\n\r\n// service imports\r\nimport retrieval from './services/retrieval';\r\n\r\nconst App = () => {\r\n  const [songs, setSongs] = useState('');\r\n  const [shows, setShows] = useState('');\r\n\r\n  useEffect(() => {\r\n    console.log('App has loaded');\r\n    retrieval\r\n      .getSongs()\r\n      .then(songs => {\r\n        console.log(songs);\r\n        setSongs(songs);\r\n      });\r\n\r\n    // retrieval\r\n    //   .getShows()\r\n    //   .then(shows => {\r\n    //     console.log(shows);\r\n    //     setShows(shows);\r\n    //   });\r\n  },\r\n  []);\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h1>Songs played by Mr. Please: </h1>\r\n      {songs\r\n        ? <>\r\n          <ul>\r\n            {songs.map(song => (<li key={song._id}>{song.title}</li>))}\r\n          </ul>\r\n          </>\r\n        : null}\r\n\r\n      <h1>Shows performed by Mr. Please: </h1>\r\n      {/* {shows\r\n        ? <>\r\n\r\n          {shows.map(show => (\r\n            <Show\r\n              key={show._id}\r\n              info={show}\r\n            />\r\n          ))}\r\n        </>\r\n        : null} */}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}