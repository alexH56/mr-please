{"version":3,"sources":["components/Home.js","components/Setlists/SongsContainer.js","components/Setlists/SongList.js","components/Setlists/ShowHeading.js","components/Setlists/Set.js","components/Setlists/Show.js","components/Setlists/ShowsContainer.js","components/Setlists/SongPage.js","components/Setlists/VenuesContainer.js","components/Setlists/VenueList.js","components/Setlists/VenuePage.js","services/retrieval.js","components/Setlists/Setlists.js","App.js","components/ScrollToTop.js","reportWebVitals.js","index.js"],"names":["Home","SongsContainer","songs","Container","sortedSongs","sort","a","b","title","map","song","to","URLname","id","SongList","Heading","styled","h3","ShowHeading","date","venue","name","location","city","state","SetWrapper","div","Set","value","index","note","length","transition","Card","section","Show","show","month","day","year","setOne","sets","setTwo","setThree","encore","showNotes","songNotes","noteArray","set","noteContent","filter","concat","text","main","ShowsContainer","shows","SongPage","songName","useParams","showsWithSong","match","some","VenuesContainer","venues","sortedVenues","VenueList","VenuePage","venueName","showsWithVenue","baseURL","retrieval","getShows","axios","method","url","then","response","data","catch","err","console","log","getSongs","getVenues","header","Setlists","useState","setSongs","setShows","setVenues","useEffect","Promise","all","returnedShows","returnedSongs","returnedVenues","sortedShows","A","B","fetchBandData","path","Navbar","nav","App","className","ScrollToTop","pathname","useLocation","window","scrollTo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5efd413.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main>\r\n      <h1>Hey, we're Mr. Please!</h1>\r\n      <h3>The site is very much under construction, but for now you can view our setlists by viewing the links above</h3>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst SongsContainer = ({ songs, Container }) => {\r\n  const sortedSongs = [...songs].sort((a, b) => (\r\n    a.title > b.title\r\n      ? 1\r\n      : a.title < b.title\r\n        ? -1\r\n        : 0\r\n  ));\r\n\r\n  return (\r\n    <Container>\r\n      {sortedSongs\r\n        ? <ul>\r\n          {sortedSongs.map(song => (\r\n            <li key={song.id}>\r\n              <Link to={`/setlists/songs/${song.URLname}`}>\r\n                {song.title}\r\n              </Link>\r\n            </li>))}\r\n          </ul>\r\n        : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SongsContainer;\r\n","import React from 'react';\r\n\r\nimport SongsContainer from './SongsContainer';\r\n\r\nconst SongList = ({ songs, Heading, Container }) => {\r\n  return (\r\n    <>\r\n      <Heading>\r\n        <h1>Songs played by Mr. Please: </h1>\r\n      </Heading>\r\n      {songs\r\n        ? <SongsContainer\r\n          songs={songs}\r\n          Container={Container}\r\n          />\r\n        : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SongList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Heading = styled.h3`\r\n    margin-top: 0;\r\n\r\n    a {\r\n      color: currentColor;\r\n      text-decoration: none;\r\n\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n`;\r\n\r\nconst ShowHeading = ({ date, venue }) => {\r\n  const { name, URLname = '', location: { city, state } } = venue;\r\n\r\n  return (\r\n    <Heading>\r\n      {`${date} - `}\r\n      <Link to={`/setlists/venues/${URLname}`}>\r\n        {name}\r\n      </Link>\r\n      {', '}\r\n      <Link to={`/setlists/venues/${URLname}`}>\r\n        {city}\r\n      </Link>\r\n      {', '}\r\n      <Link to={`/setlists/venues/${URLname}`}>\r\n        {state}\r\n      </Link>\r\n    </Heading>\r\n  );\r\n};\r\n\r\nexport default ShowHeading;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst SetWrapper = styled.div`\r\n  a {\r\n  color: palevioletred;\r\n  text-decoration: none;\r\n\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Set = ({ songs, value }) => {\r\n  // 'value' prop denotes set order (i.e. set 1, 2, 3, or encore)\r\n  return (\r\n    <SetWrapper>\r\n      <p>{value === 'encore' ? 'Encore:' : `Set ${value}:`} {songs.map((song, index) => (\r\n        <span key={index}>\r\n          {/* use of index as key is unideal, but necessary to avoid duplicate keys until a solution is implemented in the data layer -likely a function to check and alter id value upon show input */}\r\n          <Link to={`/setlists/songs/${song.URLname}`}>\r\n            {song.title}\r\n          </Link>\r\n          {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n          {index === songs.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n        </span>\r\n      ))}\r\n      </p>\r\n    </SetWrapper>\r\n  );\r\n};\r\n\r\nexport default Set;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport ShowHeading from './ShowHeading';\r\nimport Set from './Set';\r\n\r\nconst Card = styled.section`\r\n    background: papayawhip;\r\n    box-shadow: 0 7px 30px -10px rgba(150,170,180,0.5);\r\n    border-radius: 20px;\r\n    padding: 20px;\r\n    margin-bottom: 40px;\r\n\r\n    p {\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    ul {\r\n      margin-bottom: 0;\r\n      padding: 0;\r\n      list-style-type: none;      \r\n    }\r\n\r\n    @media (min-width: 605px) {\r\n      width: 525px;\r\n    }\r\n  `;\r\n\r\nconst Show = ({ show }) => {\r\n  const { month, day, year } = show.date;\r\n  const date = `${month}/${day}/${year}`;\r\n\r\n  const venue = show.venue;\r\n\r\n  const setOne = show.sets[1];\r\n  const setTwo = show.sets[2];\r\n  const setThree = show.sets[3];\r\n  const encore = show.sets.encore;\r\n\r\n  const showNotes = show.showNotes;\r\n\r\n  const songNotes = (() => {\r\n    let noteArray = [];\r\n    for (const set in show.sets) {\r\n      const noteContent = show.sets[set]\r\n        .filter(show => show.note)\r\n        .map(show => show.note);\r\n      noteArray = noteArray.concat(noteContent);\r\n    }\r\n    return noteArray;\r\n  })();\r\n\r\n  return (\r\n    <Card>\r\n      <ShowHeading\r\n        date={date}\r\n        venue={venue}\r\n      />\r\n\r\n      {setOne.length > 0\r\n        ? <Set\r\n          songs={setOne}\r\n          value={1}\r\n        />\r\n\r\n        : null}\r\n\r\n      {setTwo.length > 0\r\n        ? <Set\r\n          songs={setTwo}\r\n          value={2}\r\n        />\r\n\r\n        : null}\r\n\r\n      {setThree.length > 0\r\n        ? <Set\r\n          songs={setThree}\r\n          value={3}\r\n        />\r\n\r\n        : null}\r\n\r\n      {encore.length > 0\r\n        ? <Set\r\n          songs={show.sets.encore}\r\n          value={encore}\r\n        />\r\n\r\n        : null}\r\n\r\n      {/* <p>Set One: {setOne.map((song, index) => (\r\n          <span key={song.title}>\r\n            <Link to={`/setlists/songs/${song.URLname}`} key={song.title}>\r\n              {song.title}\r\n            </Link>\r\n            {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n            {index === setOne.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n          </span>\r\n        ))}\r\n        </p> */}\r\n\r\n      {songNotes.length > 0\r\n        ? <ul>\r\n          {songNotes.map(note => (\r\n            <li key={note.id}>\r\n              {`[${note.id}] - ${note.text}`}\r\n            </li>\r\n          ))}\r\n          </ul>\r\n        : null}\r\n\r\n      {showNotes\r\n        ? <p>Notes: {showNotes}</p>\r\n        : null}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Show from './Show';\r\n\r\nconst Container = styled.main`\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n`;\r\n\r\nconst ShowsContainer = ({ shows }) => {\r\n  return (\r\n    <Container>\r\n      {shows\r\n        ? <>\r\n          {shows.map(show => (\r\n            <Show\r\n              key={show.id}\r\n              show={show}\r\n            />\r\n          ))}\r\n          </>\r\n        : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShowsContainer;\r\n","import React from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport ShowsContainer from './ShowsContainer';\r\n\r\nconst SongPage = ({ songs, shows, Heading }) => {\r\n  const { songName } = useParams();\r\n  const song = songs\r\n    ? songs.filter(song => song.URLname === songName)[0]\r\n    : null;\r\n\r\n  const showsWithSong = shows && song\r\n    ? shows.filter(show => {\r\n      let match = false;\r\n      for (const set in show.sets) {\r\n        if (show.sets[set].some(song => song.URLname === songName)) {\r\n          match = true;\r\n          break;\r\n        }\r\n      }\r\n      return match;\r\n    })\r\n    : null;\r\n\r\n  return (\r\n    <>\r\n      {song\r\n        ? <>\r\n          <Heading>\r\n            <h1>{song.title}</h1>\r\n            <p>Has been played at the following shows:</p>\r\n          </Heading>\r\n\r\n          <ShowsContainer\r\n            shows={showsWithSong}\r\n          />\r\n          </>\r\n\r\n        : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SongPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst VenuesContainer = ({ venues, Container }) => {\r\n  const sortedVenues = [...venues].sort((a, b) => (\r\n    a.name > b.name\r\n      ? 1\r\n      : a.name < b.name\r\n        ? -1\r\n        : 0\r\n  ));\r\n\r\n  return (\r\n    <Container>\r\n      {sortedVenues\r\n        ? <>\r\n          <ul>\r\n            {sortedVenues.map(venue => (\r\n              <li key={venue.id}>\r\n                <Link to={`/setlists/venues/${venue.URLname}`}>\r\n                  {venue.name}\r\n                </Link>\r\n              </li>))}\r\n          </ul>\r\n        </>\r\n        : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VenuesContainer\r\n;\r\n","import React from 'react';\r\n\r\nimport VenuesContainer from './VenuesContainer';\r\n\r\nconst VenueList = ({ venues, Heading, Container }) => {\r\n  return (\r\n    <>\r\n      <Heading>\r\n        <h1>Venues played by Mr. Please: </h1>\r\n      </Heading>\r\n\r\n      <VenuesContainer\r\n        venues={venues}\r\n        Container={Container}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VenueList;\r\n","import React from 'react';\r\n\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport ShowsContainer from './ShowsContainer';\r\n\r\nconst VenuePage = ({ venues, shows, Heading }) => {\r\n  const { venueName } = useParams();\r\n  const venue = venues\r\n    ? venues.filter(venue => venue.URLname === venueName)[0]\r\n    : null;\r\n\r\n  const showsWithVenue = shows && venue\r\n    ? shows.filter(show => show.venue.name === venue.name)\r\n    : null;\r\n\r\n  return (\r\n    <>\r\n      {venue\r\n        ? <>\r\n          <Heading>\r\n            <h1>{venue.name}</h1>\r\n            <p>Has hosted the following shows:</p>\r\n          </Heading>\r\n\r\n          <ShowsContainer\r\n            shows={showsWithVenue}\r\n          />\r\n          </>\r\n\r\n        : null}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VenuePage;\r\n","import axios from 'axios';\r\nconst baseURL = '/api';\r\n\r\nconst getShows = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/shows',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst getSongs = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/songs',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst getVenues = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/venues',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst retrieval = { getShows, getSongs, getVenues };\r\nexport default retrieval;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n// component imports\r\nimport SongList from './SongList';\r\nimport SongPage from './SongPage';\r\nimport VenueList from './VenueList';\r\nimport VenuePage from './VenuePage';\r\nimport ShowsContainer from './ShowsContainer';\r\n\r\n// import ShowForm from './components/ShowForm/ShowForm';\r\n\r\n// service imports\r\nimport retrieval from '../../services/retrieval';\r\n// import posting from '../../services/posting';\r\n\r\nconst Heading = styled.header`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    /* margin: 2rem 0rem; */\r\n    padding: 7.5%;\r\n    text-align: center;\r\n\r\n    h1 {\r\n      font-family: 'Roboto', sans-serif;\r\n      font-weight: 700px;\r\n      margin: 0;\r\n    }\r\n    \r\n    p {\r\n      margin: 1rem 0 0 0;\r\n    }\r\n`;\r\n\r\nconst Container = styled.main`\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        text-align: center; \r\n\r\n        ul {\r\n          list-style-type: none;\r\n          padding: 0;\r\n          margin: 0;\r\n\r\n          & li {\r\n            margin: 0 0 .5rem 0;\r\n          }\r\n\r\n          & a {\r\n            color: black;\r\n            text-decoration: underline;\r\n            \r\n            &:hover {\r\n              text-decoration: none;\r\n            }\r\n          }\r\n        }\r\n    `;\r\n\r\nconst Setlists = () => {\r\n  const [songs, setSongs] = useState('');\r\n  const [shows, setShows] = useState('');\r\n  const [venues, setVenues] = useState('');\r\n\r\n  useEffect(() => {\r\n    // retrieves all band-related data upon page load\r\n    const fetchBandData = async () => {\r\n      const [returnedShows, returnedSongs, returnedVenues] = await Promise.all([\r\n        retrieval.getShows(),\r\n        retrieval.getSongs(),\r\n        retrieval.getVenues()\r\n      ]);\r\n\r\n      const sortedShows = [...returnedShows].sort((a, b) => {\r\n        const A = a.date;\r\n        const B = b.date;\r\n\r\n        if (A.year !== B.year) {\r\n          return B.year - A.year;\r\n        } else if (A.month !== B.month) {\r\n          return B.month - A.month;\r\n        } else {\r\n          return B.day - A.day;\r\n        }\r\n      });\r\n\r\n      setShows(sortedShows);\r\n      setSongs(returnedSongs);\r\n      setVenues(returnedVenues);\r\n    };\r\n\r\n    fetchBandData();\r\n  },\r\n  []);\r\n\r\n  // \"handleNewShow\" function only necessary for ShowForm. Currently not user-facing\r\n  //\r\n  // const handleNewShow = (show) => {\r\n  //   posting\r\n  //     .addShow(show)\r\n  //     .then(returnedShow => {\r\n  //       console.log(returnedShow);\r\n  //       setShows(shows.concat(returnedShow));\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path='/setlists/songs/:songName'>\r\n        <SongPage\r\n          songs={songs}\r\n          shows={shows}\r\n          Heading={Heading}\r\n        />\r\n      </Route>\r\n\r\n      <Route path='/setlists/songs'>\r\n        <SongList\r\n          songs={songs}\r\n          shows={shows}\r\n          Heading={Heading}\r\n          Container={Container}\r\n        />\r\n      </Route>\r\n\r\n      <Route path='/setlists/venues/:venueName'>\r\n        <VenuePage\r\n          venues={venues}\r\n          shows={shows}\r\n          Heading={Heading}\r\n        />\r\n      </Route>\r\n\r\n      <Route path='/setlists/venues'>\r\n        <VenueList\r\n          venues={venues}\r\n          shows={shows}\r\n          Heading={Heading}\r\n          Container={Container}\r\n        />\r\n      </Route>\r\n\r\n      <Route path='/setlists'>\r\n        <Heading>\r\n          <h1>Mr. Please</h1>\r\n          <p>has performed the following shows:</p>\r\n        </Heading>\r\n        <ShowsContainer\r\n          shows={shows}\r\n        />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Setlists;\r\n","import React from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n// component imports\r\nimport Home from './components/Home';\r\nimport Setlists from './components/Setlists/Setlists';\r\n\r\nconst Navbar = styled.nav`\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0;\r\n\r\n  background-color: black;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  padding: .75rem 7.5%;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: white;\r\n\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='App'>\r\n\r\n      <Navbar>\r\n        <Link to='/setlists'>Setlists</Link>\r\n        <br />\r\n        <Link to='/setlists/songs'>Songs</Link>\r\n        <br />\r\n        <Link to='/setlists/venues'>Venues</Link>\r\n      </Navbar>\r\n\r\n      <Switch>\r\n        <Route path='/setlists'>\r\n          <Setlists />\r\n        </Route>\r\n\r\n        <Route path='/'>\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport ScrollToTop from './components/ScrollToTop';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <ScrollToTop />\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}