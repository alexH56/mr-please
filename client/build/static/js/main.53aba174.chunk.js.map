{"version":3,"sources":["components/Show.js","components/ShowForm/DateForm.js","components/ShowForm/SetForm.js","components/ShowForm/VenueForm.js","components/ShowForm/ShowForm.js","services/retrieval.js","services/posting.js","App.js","reportWebVitals.js","index.js"],"names":["Show","show","date","month","day","year","venueName","venue","name","setOne","sets","setTwo","setThree","encore","showNotes","length","map","song","index","href","title","note","id","transition","join","DateForm","handleDate","type","min","max","Date","toISOString","slice","onChange","event","SetForm","setID","songs","newShow","handleSongSelect","handleTransitionToggle","handleSongNote","useState","noteText","setNoteText","set","mostRecentSong","toggleContent","onClick","value","e","target","handleText","placeholder","preventDefault","VenueForm","venues","handleVenue","ShowForm","handleNewShow","blankSet","location","street","street2","city","state","zip","country","1","2","3","countsForStats","audioLink","setNewShow","numOfSets","setNumOfSets","encoreClicked","setEncoreClicked","noteCounter","setNoteCounter","songNotes","noteArray","noteContent","filter","concat","newSong","newSet","toggledSong","Object","keys","reduce","object","key","oldSet","text","notedSong","splitDate","split","dateObj","parseInt","venueObj","forms","i","push","renderSetForms","checked","newValue","handleShowNotes","disabled","baseURL","retrieval","getShows","axios","method","url","then","response","data","catch","err","console","log","getSongs","getVenues","posting","addShow","addSong","App","setSongs","shows","setShows","setVenues","useEffect","className","returnedShow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53aba174.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Show = ({ show }) => {\r\n  const { month, day, year } = show.date;\r\n  const date = `${month}/${day}/${year}`;\r\n  const venueName = show.venue.name;\r\n\r\n  const setOne = show.sets[1];\r\n  const setTwo = show.sets[2];\r\n  const setThree = show.sets[3];\r\n  const encore = show.sets.encore;\r\n\r\n  const showNotes = show.showNotes;\r\n\r\n  return (\r\n    <div>\r\n      <h3>{date} - {venueName}</h3>\r\n\r\n      {setOne.length > 0\r\n        ? <p>Set One: {setOne.map((song, index) => (\r\n          <span key={song.title}>\r\n            <a key={song.title} href='#'>\r\n              {song.title}\r\n            </a>\r\n            {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n            {index === setOne.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n          </span>\r\n        ))}\r\n        </p>\r\n        : null}\r\n\r\n      {setTwo.length > 0\r\n        ? <p>Set Two: {setTwo.map(song => song.title).join(', ')}</p>\r\n        : null}\r\n\r\n      {setThree.length > 0\r\n        ? <p>Set Three: {setThree.map(song => song.title).join(', ')}</p>\r\n        : null}\r\n\r\n      {encore.length > 0\r\n        ? <p>Encore: {encore.map(song => song.title).join(', ')}</p>\r\n        : null}\r\n\r\n      {showNotes\r\n        ? <p>Notes: {showNotes}</p>\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","const DateForm = ({ handleDate }) => {\r\n  return (\r\n    <form>\r\n      <label>Date: <input\r\n        type='date'\r\n        name='date'\r\n        min='2020-02-01'\r\n        max={new Date().toISOString().slice(0, 10)}\r\n        onChange={(event) => handleDate(event)}\r\n      />\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DateForm;\r\n","import React, { useState } from 'react';\r\n\r\nconst SetForm = ({ setID, songs, newShow, handleSongSelect, handleTransitionToggle, handleSongNote }) => {\r\n  const [noteText, setNoteText] = useState('');\r\n  const set = newShow.sets[setID];\r\n  const mostRecentSong = set[set.length - 1];\r\n  const toggleContent = set.length > 0\r\n    ? mostRecentSong.transition\r\n      ? ','\r\n      : '>'\r\n    : null;\r\n\r\n  const handleText = (e) => {\r\n    setNoteText(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>{setID === 'encore' ? 'Encore: ' : `Set ${setID}: `}\r\n        {set.map((song, index) => (\r\n          <span key={song.title}>\r\n            <a key={song.title}\r\n            // href='#'\r\n            >\r\n              {song.title}\r\n            </a>\r\n            {song.note ? <sup>[{song.note.id}]</sup> : null}\r\n            {index === set.length - 1 ? null : (song.transition ? ' > ' : ', ')}\r\n          </span>\r\n        ))}\r\n      </p>\r\n\r\n      {set.length > 0\r\n        ? <>\r\n          <button onClick={() => handleTransitionToggle(mostRecentSong, setID)}>{toggleContent}</button>\r\n          <form>\r\n            <input\r\n              type='text'\r\n              value={noteText}\r\n              onChange={(e) => handleText(e)}\r\n              placeholder='Add a note to current song'\r\n            />\r\n            <button onClick={(e) => { e.preventDefault(); handleSongNote(mostRecentSong, setID, noteText); setNoteText(''); }}>\r\n              add\r\n            </button>\r\n          </form>\r\n          </>\r\n        : null}\r\n\r\n      <form>\r\n        <select name='song' value='' onChange={(event) => handleSongSelect(event, setID)}>\r\n          <option value=''>- add a song -</option>\r\n          {songs ? songs.map(song => <option key={song.title} value={song.title}>{song.title}</option>) : null}\r\n        </select>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n;\r\n\r\nexport default SetForm;\r\n","const VenueForm = ({ venues, handleVenue }) => {\r\n  return (\r\n    <form>\r\n      <label>Venue: <select name='venue' onChange={(event) => handleVenue(event)}>\r\n        <option value=''>- select venue -</option>\r\n        {venues ? venues.map(venue => <option key={venue.name} value={venue.name}>{venue.name}</option>) : null}\r\n      </select>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default VenueForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport DateForm from './DateForm';\r\nimport SetForm from './SetForm';\r\nimport VenueForm from './VenueForm';\r\n\r\nconst ShowForm = ({ songs, venues, handleNewShow }) => {\r\n  const blankSet = {\r\n    date: {\r\n      month: 1,\r\n      day: 1,\r\n      year: 2001\r\n    },\r\n    venue: {\r\n      name: '',\r\n      location: {\r\n        street: '',\r\n        street2: '',\r\n        city: '',\r\n        state: '',\r\n        zip: '',\r\n        country: ''\r\n      }\r\n    },\r\n    sets: {\r\n      1: [],\r\n      2: [],\r\n      3: [],\r\n      encore: []\r\n    },\r\n    showNotes: '',\r\n    countsForStats: false,\r\n    audioLink: ''\r\n  };\r\n  const [newShow, setNewShow] = useState(blankSet);\r\n  const [numOfSets, setNumOfSets] = useState(1);\r\n  const [encoreClicked, setEncoreClicked] = useState(false);\r\n  const [noteCounter, setNoteCounter] = useState(1);\r\n\r\n  const renderSetForms = (numOfSets) => {\r\n    const forms = [];\r\n    for (let i = 1; i <= numOfSets; i++) {\r\n      forms.push(\r\n        <SetForm\r\n          key={i}\r\n          setID={i}\r\n          songs={songs}\r\n          newShow={newShow}\r\n          handleSongSelect={handleSongSelect}\r\n          handleTransitionToggle={handleTransitionToggle}\r\n          handleSongNote={handleSongNote}\r\n        />\r\n      );\r\n    }\r\n    return forms;\r\n  };\r\n\r\n  const songNotes = (() => {\r\n    let noteArray = [];\r\n    for (const set in newShow.sets) {\r\n      const noteContent = newShow.sets[set]\r\n        .filter(show => show.note)\r\n        .map(show => show.note);\r\n      noteArray = noteArray.concat(noteContent);\r\n    }\r\n    return noteArray;\r\n  })();\r\n\r\n  const handleSongSelect = (e, setID) => {\r\n    let newSong;\r\n    for (const song of songs) {\r\n      if (song.title === e.target.value) {\r\n        newSong = song;\r\n      }\r\n    }\r\n    const newSet = newShow.sets[setID].concat(newSong);\r\n    setNewShow({ ...newShow, sets: { ...newShow.sets, [setID]: newSet } });\r\n  };\r\n\r\n  const handleTransitionToggle = (song, setID) => {\r\n    if (song.transition) {\r\n      const toggledSong = Object.keys(song).reduce((object, key) => {\r\n        if (key !== 'transition') {\r\n          object[key] = song[key];\r\n        }\r\n        return object;\r\n      }, {});\r\n      const oldSet = newShow.sets[setID];\r\n      const newSet = oldSet\r\n        .slice(0, oldSet.length - 1)\r\n        .concat(toggledSong);\r\n\r\n      setNewShow({\r\n        ...newShow,\r\n        sets: {\r\n          ...newShow.sets,\r\n          [setID]: newSet\r\n        }\r\n      });\r\n    } else {\r\n      const toggledSong = { ...song, transition: true };\r\n      const oldSet = newShow.sets[setID];\r\n      const newSet = oldSet\r\n        .slice(0, oldSet.length - 1)\r\n        .concat(toggledSong);\r\n\r\n      setNewShow({\r\n        ...newShow,\r\n        sets: {\r\n          ...newShow.sets,\r\n          [setID]: newSet\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDate = (e) => {\r\n    const date = e.target.value;\r\n    const splitDate = date.split('-');\r\n    const dateObj = {\r\n      month: parseInt(splitDate[1]),\r\n      day: parseInt(splitDate[2]),\r\n      year: parseInt(splitDate[0])\r\n    };\r\n\r\n    setNewShow({ ...newShow, date: dateObj });\r\n  };\r\n\r\n  const handleVenue = (e) => {\r\n    let venueObj;\r\n    for (const venue of venues) {\r\n      if (venue.name === e.target.value) {\r\n        venueObj = venue;\r\n      }\r\n    }\r\n\r\n    setNewShow({ ...newShow, venue: venueObj });\r\n  };\r\n\r\n  const handleSongNote = (song, setID, text) => {\r\n    const notedSong = !song.note\r\n      ? {\r\n        ...song,\r\n        note: {\r\n          id: noteCounter,\r\n          text: text\r\n        }\r\n      }\r\n      : {\r\n        ...song,\r\n        note: {\r\n          ...song.note,\r\n          text: text\r\n        }\r\n      };\r\n\r\n    const oldSet = newShow.sets[setID];\r\n    const newSet = oldSet\r\n      .slice(0, oldSet.length - 1)\r\n      .concat(notedSong);\r\n\r\n    setNewShow({\r\n      ...newShow,\r\n      sets: {\r\n        ...newShow.sets,\r\n        [setID]: newSet\r\n      }\r\n    });\r\n\r\n    if (!song.note) { setNoteCounter(noteCounter + 1); }\r\n  };\r\n\r\n  const handleCheckbox = () => {\r\n    const newValue = !newShow.countsForStats;\r\n\r\n    setNewShow({\r\n      ...newShow,\r\n      countsForStats: newValue\r\n    }\r\n    );\r\n  };\r\n\r\n  const handleShowNotes = (e) => {\r\n    setNewShow({ ...newShow, showNotes: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (show) => {\r\n    handleNewShow(show);\r\n    setNewShow(blankSet);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>New Show:</h1>\r\n\r\n      <DateForm\r\n        handleDate={handleDate}\r\n      />\r\n\r\n      <VenueForm\r\n        venues={venues}\r\n        handleVenue={handleVenue}\r\n      />\r\n\r\n      {renderSetForms(numOfSets)}\r\n\r\n      {encoreClicked\r\n        ? <SetForm\r\n          key='encore'\r\n          setID='encore'\r\n          songs={songs}\r\n          newShow={newShow}\r\n          handleSongSelect={handleSongSelect}\r\n          handleTransitionToggle={handleTransitionToggle}\r\n          handleSongNote={handleSongNote}\r\n        />\r\n        : null}\r\n\r\n      <ul>\r\n        {songNotes.map(note => (\r\n          <li key={note.id}>\r\n            {`[${note.id}] ${note.text}`}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {numOfSets < 3\r\n        ? <button onClick={() => setNumOfSets(() => numOfSets + 1)}>Add Set</button>\r\n        : null}\r\n\r\n      {numOfSets > 1\r\n        ? <button onClick={() => {\r\n          setNewShow({ ...newShow, sets: { ...newShow.sets, [numOfSets]: [] } });\r\n          setNumOfSets(numOfSets - 1);\r\n        }}\r\n        >\r\n        Remove Set\r\n        </button>\r\n        : null}\r\n\r\n      <button onClick={() => {\r\n        setNewShow({ ...newShow, sets: { ...newShow.sets, encore: [] } });\r\n        setEncoreClicked(!encoreClicked);\r\n      }}\r\n      >\r\n        {encoreClicked ? 'Remove Encore' : 'Add Encore'}\r\n      </button>\r\n\r\n      <br />\r\n\r\n      <label>\r\n        Counts for stats? <input\r\n          type='checkbox'\r\n          checked={newShow.countsForStats} onChange={handleCheckbox}\r\n                          />\r\n      </label>\r\n\r\n      <br />\r\n\r\n      <label>\r\n        Show notes: <input\r\n          type='text'\r\n          value={newShow.showNotes}\r\n          onChange={(e) => handleShowNotes(e)}\r\n                    />\r\n      </label>\r\n\r\n      <br />\r\n\r\n      <button\r\n        disabled={!(newShow.sets[1].length > 0 && newShow.date.year !== 2001 && newShow.venue.name)}\r\n        onClick={() => handleSubmit(newShow)}\r\n      >Submit\r\n      </button>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowForm\r\n;\r\n","import axios from 'axios';\r\nconst baseURL = '/api';\r\n\r\nconst getShows = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/shows',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst getSongs = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/songs',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst getVenues = () => (\r\n  axios({\r\n    method: 'get',\r\n    url: '/venues',\r\n    baseURL: baseURL\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst retrieval = { getShows, getSongs, getVenues };\r\nexport default retrieval;\r\n","import axios from 'axios';\r\nconst baseURL = '/api';\r\n\r\nconst addShow = newShow => (\r\n  axios({\r\n    method: 'post',\r\n    url: '/shows',\r\n    baseURL: baseURL,\r\n    data: newShow\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst addSong = newSong => (\r\n  axios({\r\n    method: 'post',\r\n    url: '/songs',\r\n    baseURL: baseURL,\r\n    data: newSong\r\n  })\r\n    .then(response => response.data)\r\n    .catch(err => console.log(err))\r\n);\r\n\r\nconst posting = { addShow, addSong };\r\nexport default posting;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// component imports\r\nimport Show from './components/Show';\r\nimport ShowForm from './components/ShowForm/ShowForm';\r\n\r\n// service imports\r\nimport retrieval from './services/retrieval';\r\nimport posting from './services/posting';\r\n\r\nconst App = () => {\r\n  const [songs, setSongs] = useState('');\r\n  const [shows, setShows] = useState('');\r\n  const [venues, setVenues] = useState('');\r\n\r\n  useEffect(() => {\r\n    console.log('App has loaded');\r\n    retrieval\r\n      .getSongs()\r\n      .then(songs => {\r\n        setSongs(songs);\r\n      });\r\n\r\n    retrieval\r\n      .getShows()\r\n      .then(shows => {\r\n        setShows(shows);\r\n      });\r\n\r\n    retrieval\r\n      .getVenues()\r\n      .then(songs => {\r\n        setVenues(songs);\r\n      });\r\n  },\r\n  []);\r\n\r\n  const handleNewShow = (show) => {\r\n    posting\r\n      .addShow(show)\r\n      .then(returnedShow => {\r\n        console.log(returnedShow);\r\n        setShows(shows.concat(returnedShow));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='App'>\r\n\r\n      <ShowForm\r\n        songs={songs}\r\n        venues={venues}\r\n        handleNewShow={handleNewShow}\r\n      />\r\n\r\n      <h1>Songs played by Mr. Please: </h1>\r\n      {songs\r\n        ? <>\r\n          <ul>\r\n            {songs.map(song => (<li key={song.id}>{song.title}</li>))}\r\n          </ul>\r\n        </>\r\n        : null}\r\n\r\n      <h1>Shows performed by Mr. Please: </h1>\r\n      {shows\r\n        ? <>\r\n          {shows.map(show => (\r\n            <Show\r\n              key={show.id}\r\n              show={show}\r\n            />\r\n          ))}\r\n        </>\r\n        : null}\r\n\r\n      <h1>Venues played by Mr. Please: </h1>\r\n      {venues\r\n        ? <>\r\n          <ul>\r\n            {venues.map(venue => (<li key={venue.id}>{venue.name}</li>))}\r\n          </ul>\r\n        </>\r\n        : null}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}